name: Secrets Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run secrets scan daily at 2:00 AM UTC
    - cron: '0 2 * * *'

jobs:
  secrets-scan:
    name: Scan for Secrets
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch full history for better secret detection

    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.before || 'HEAD~1' }}
        head: HEAD
        extra_args: --debug --only-verified

    - name: GitLeaks Scan
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Custom Secrets Pattern Check
      run: |
        echo "Running custom secrets patterns check..."

        # Check for common secret patterns
        SECRETS_FOUND=false

        # API Keys (various formats)
        if grep -r -E "(api[_-]?key['\"]?\s*[:=]\s*['\"][^'\"]{20,}|sk-[a-zA-Z0-9]{48}|pk_[a-z]{4}_[a-zA-Z0-9]{24})" . --exclude-dir=node_modules --exclude-dir=.git --exclude-dir=dist; then
          echo "⚠️ Potential API keys found"
          SECRETS_FOUND=true
        fi

        # GitHub tokens
        if grep -r -E "ghp_[A-Za-z0-9_]{36}" . --exclude-dir=node_modules --exclude-dir=.git --exclude-dir=dist; then
          echo "⚠️ Potential GitHub tokens found"
          SECRETS_FOUND=true
        fi

        # Private keys
        if grep -r -E "(-----BEGIN [A-Z ]+PRIVATE KEY-----)" . --exclude-dir=node_modules --exclude-dir=.git --exclude-dir=dist; then
          echo "⚠️ Private keys found"
          SECRETS_FOUND=true
        fi

        # Database credentials
        if grep -r -E "(password['\"]?\s*[:=]\s*['\"][^'\"]{8,}|database[_-]?url['\"]?\s*[:=]\s*['\"][^'\"]{20,})" . --exclude-dir=node_modules --exclude-dir=.git --exclude-dir=dist; then
          echo "⚠️ Potential database credentials found"
          SECRETS_FOUND=true
        fi

        # AWS credentials
        if grep -r -E "(AKIA[0-9A-Z]{16}|aws[_-]?secret[_-]?access[_-]?key)" . --exclude-dir=node_modules --exclude-dir=.git --exclude-dir=dist; then
          echo "⚠️ Potential AWS credentials found"
          SECRETS_FOUND=true
        fi

        if [ "$SECRETS_FOUND" = "true" ]; then
          echo "❌ Potential secrets detected! Please review the above findings."
          exit 1
        else
          echo "✅ No hardcoded secrets detected."
        fi

  firebase-key-validation:
    name: Validate Firebase Configuration
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check Firebase Keys
      run: |
        echo "Validating Firebase configuration..."

        if [ -f "google-services.json" ]; then
          echo "Found google-services.json"

          # Extract API key
          API_KEY=$(grep -o '"current_key": "[^"]*"' google-services.json | head -1 | grep -o 'AIza[^"]*')

          if [ ! -z "$API_KEY" ]; then
            echo "✅ Firebase API key format is valid: ${API_KEY:0:10}..."
            echo "ℹ️  Firebase API keys are meant to be public in mobile apps"
            echo "ℹ️  They are restricted by bundle ID and API restrictions"
          else
            echo "❌ No valid Firebase API key found"
            exit 1
          fi

          # Check for proper bundle ID configuration
          BUNDLE_COUNT=$(grep -c "package_name" google-services.json)
          if [ "$BUNDLE_COUNT" -gt 0 ]; then
            echo "✅ Firebase configured for $BUNDLE_COUNT app bundle(s)"
          else
            echo "❌ No bundle configuration found in Firebase config"
            exit 1
          fi
        else
          echo "ℹ️  No google-services.json found (optional)"
        fi